exit
depth
board
best_move
exit
@board
exit
puts_board
c
puts_board
comp
c
exit
depth
c
score board
score_board
depth
c
score(board)
board.find_winner
board
c
board
c
board
c
board
c
board
c
board
depth
c
depth
board
c
exit
puts_board
exit
puts_board
exit
puts_board
comp_move
exit
@current_player
comp_move
puts_board
c
exit
@current_player
switch_player
game_over?
exit
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
c
win_pat.all?{ |cell| player_1_moves.include?(cell) }
grid
c
exit
c
player_1_moves
win_pat.all?{ |cell| player_1_moves.include?(cell) }
win_pat
exit
winning_pattern
winning_pattter
winning_patttern
        }
        player_1_moves.include?(cell)
      win_pat.all?{ |cell|
winning_pattern.any? {|win_pat| 
grid
c
grid
board
c
move_scores
best_move = best_move(current_player, move_scores)
depth
dept
c
depth
c
depth
c
board
c
current_player
board
c
board
depth
move_scores
exit
board
depth
best_move(current_player, move_scores)
move_scores
exit
move_scores.max_by{|k,v| v}
move_scores
c
exit
move_scores
c
exit
move_scores
c
board.find_winner
board
score
opponent_id(@player_id)
opponent_id
c
opponent_id(@player_id)
exit
move_scores
c
opponent_id
player_id
board.find_winner
board
c
exit
board.find_winner
board.grid_find_winner
board.grid.each_slice(3){|row| p  row}
board
c
exit
move_scores
c
exit
move_scores
board
c
current_player
board
